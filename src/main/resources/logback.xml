<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013-2018 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<configuration>

    <!--<include resource="org/springframework/boot/logging/logback/defaults.xml"/>-->
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>

    <!--    The effect of this pattern varies depending on how SleuthConfig is set.
            If comment out config just get appName & traceId (and only when explicitly request a log message)
            If leave config in all its glory get trace, parent, span, and so very much more  (and get it with every rest call, regardless)
    -->
    <!--    Pattern is as close as I can be bothered to get to Spring standard class.
            Haven't yet worked out how to STOP the console log pattern being used, so force my pattern on it instead

            Default Spring pattern apparently as below, but needed to replace 3 dashes with 3x- as breaks commenting otherwise :(
            <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(3x-){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${springAppName},%X{X-B3-TraceId:-},%X{X-B3-ParentSpanId:-},%X{X-B3-SpanId:-}] ${PID:- } --- [%thread] %logger{36} - %msg%n"/>
              <!--value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${springAppName},%X{X-B3-TraceId:-}] %m%n"/>-->

    <property name="STDOUT_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${springAppName},%X{X-B3-TraceId:-},%X{X-B3-ParentSpanId:-},%X{X-B3-SpanId:-}] ${PID:- } --- [%thread] %logger{36} - %msg%n"/>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>   <pattern>${STDOUT_LOG_PATTERN}</pattern>          </encoder>
    </appender>

    <include resource="org/springframework/boot/logging/logback/base.xml"/>

    <logger name="feign" level="DEBUG"/>
    <logger name="org.springframework.cloud.sleuth" level="TRACE"/>
    <logger name="org.springframework.boot.autoconfigure.logging" level="INFO"/>
    <logger name="org.springframework.cloud.sleuth.log" level="DEBUG"/>
    <logger name="org.springframework.cloud.sleuth.trace" level="DEBUG"/>
    <logger name="org.springframework.cloud.sleuth.instrument.rxjava" level="DEBUG"/>
    <logger name="org.springframework.cloud.sleuth.instrument.reactor" level="TRACE"/>
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <!-- Would be nice if I could use STDOUT instead of CONSOLE, but failed to work out how
        <appender-ref ref="STDOUT"/>-->
        <appender-ref ref="FILE"/>
    </root>
</configuration>